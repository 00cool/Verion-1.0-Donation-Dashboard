{"version":3,"file":"w-mat-timepicker.component.js","sourceRoot":"","sources":["../../../../../src/app/components/w-mat-timepicker/w-mat-timepicker.component.ts"],"names":[],"mappings":"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","sourcesContent":["\nimport { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material';\n\nimport { WTimeDialogComponent } from '../w-time-dialog/w-time-dialog.component';\nimport { ITime } from '../w-clock/w-clock.component';\n\n@Component({\n    selector: 'timepicker',\n    template: `\n        <div fxFlex fxLayout=\"row\" class=\"w-mat-timepicker\">\n            <button mat-button (click)=\"showPicker($event)\" class=\"time-picker-button\">\n                <mat-icon>access_time</mat-icon>\n            </button>\n        </div>\n    `,\n\n    styles: [`\n        .time-picker-button {\n            padding: 0;\n            margin: 0;\n            min-width: 44px;\n        }\n    `],\n  \n    \n})\n\nexport class WMatTimePickerComponent implements OnInit {\n\n    @Input() userTime: ITime;\n    @Output() userTimeChange: EventEmitter<ITime> = new EventEmitter();\n\n    @Input() color: string;\n\n    constructor(private dialog: MatDialog) { }\n\n    ngOnInit() {\n\n        if (!this.userTime) {\n\n            this.userTime = {\n                hour: 10,\n                minute: 25,\n                meriden: 'PM',\n                format: 24\n            }\n        }\n    }\n\n    private get time(): string {\n\n        if (!this.userTime) {\n            return '';\n        }\n\n        let meriden = `${this.userTime.meriden}`;\n        if (this.userTime.format === 24) {\n            meriden = '';\n        }\n\n        let hour = `${this.userTime.hour}`;\n        if (this.userTime.hour === 24) {\n            hour = '00';\n        }\n\n        if (this.userTime.minute === 0) {\n            return `${hour}:00 ${meriden}`;\n\n        } else if (this.userTime.minute < 10) {\n\n            const tt = '0' + String(this.userTime.minute);\n            return `${hour}:${tt} ${meriden}`;\n\n        } else {\n            return `${hour}:${this.userTime.minute} ${meriden}`;\n        }\n    }\n\n\n    public showPicker($event: any) {\n\n        const dialogRef = this.dialog.open(WTimeDialogComponent, {\n\n            data: {\n                time: {\n                    hour: this.userTime.hour,\n                    minute: this.userTime.minute,\n                    meriden: this.userTime.meriden,\n                    format: this.userTime.format\n                },\n                color: this.color\n            }\n        });\n\n        dialogRef.afterClosed()\n            .subscribe((result: ITime | -1) => {\n\n                // result will be update userTime object or -1 or undefined (closed dialog w/o clicking cancel)\n                if (result === undefined) {\n                    return;\n                } else if (result !== -1) {\n                    this.userTime = result;\n                    this.emituserTimeChange();\n                }\n            });\n        return false;\n    }\n\n    private emituserTimeChange() {\n\n        this.userTimeChange.emit(this.userTime);\n    }\n}\n"]}